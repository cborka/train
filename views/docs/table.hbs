<div id="tables" title="Список таблиц из table_s"></div>
<br>
<br>
<div id="table_fields" title="Поля выбранной таблицы"></div>
<br>
<br>
<div id="table" title="Содержимое выбранной таблицы"></div>


<div id="t_name" class="magenta" title="Название выбранной таблицы"></div>

<div id="hint" class="green"></div>
<div id="erro" class="red" ></div>

<div id="dls"></div>

<input type="text" class="cell" id="xxedit"  value="xxx" />
<input list="zzz">
<datalist id="zzz">
    <option value="Текст1">
    <option value="Текст2">
    <option value="Текст72">
</datalist>

<script>

    var tbl;
    var pk_length = "";
    var r_length = 0;
    var a_names = [];
    var a_types = [];
    var a_sprs = [];
    var a_inp_types = [];
    var a_prec = [];

    //
    // Сохранить строку
    //
    function save_row(t) {
        var r = t.parentNode.parentNode; // текущая строка

        // Кол-во полей таблицы, следующее поле - кнопки, следующие поля - старые значения ключевых полей
        r_length = +document.getElementById("f_names").innerHTML.split(',').length;

//        s_pkey = document.getElementById("t_pk_f").innerHTML;
        pk_length = document.getElementById("t_pk_f").innerHTML.split(',').length;

//        for (var ii = 0; ii < r.cells.length; ii++){

        s_record = "";
        for (var ii = 0; ii < r_length+1+pk_length; ii++){

            if (ii != r_length) // Пропускаю поле с кнопками
                s_record = s_record + r.cells[ii].innerHTML + '|';
        }

        erro(s_record);

//        if ( confirm("Сохранить строку "+r.cells[1].innerHTML+" ?") ) alert('x');

            doQuery ("/docs/update_row", check_save_row,
                    "&t_name=" + encodeURIComponent(document.getElementById("t_name").innerHTML)+
                    "&s_record=" + encodeURIComponent(s_record)+
                    "&f_names=" + encodeURIComponent(document.getElementById("f_names").innerHTML)+
                    "&f_sprs=" + encodeURIComponent(document.getElementById("f_sprs").innerHTML)+
                    "&f_groups=" + encodeURIComponent(document.getElementById("f_groups").innerHTML)+
                    "&f_types=" + encodeURIComponent(document.getElementById("f_types").innerHTML)+
                    "&f_pkey=" + encodeURIComponent(document.getElementById("t_pk_fn").innerHTML)
            );
    }
    function check_save_row(reply)
    {
        if (reply.substr(0,1) == '+') // Строка сохранена в базе данных
        {
            // r.innerHTML = '';
        }
        document.getElementById("hint").innerHTML=reply;
    }

    //
    // Вставить строку
    //
    function sql_insert_row(t) {
        var r = t.parentNode.parentNode; // текущая строка

        // Кол-во полей таблицы, следующее поле - кнопки, следующие поля - старые значения ключевых полей
        r_length = +document.getElementById("f_names").innerHTML.split(',').length;
        pk_length = document.getElementById("t_pk_f").innerHTML.split(',').length;

        s_record = "";
        for (var ii = 0; ii < r_length+1+pk_length; ii++){

            if (ii != r_length) // Пропускаю поле с кнопками
                s_record = s_record + r.cells[ii].innerHTML + '|';
        }

        doQuery ("/docs/insert_row", check_insert_row,
                "&t_name=" + encodeURIComponent(document.getElementById("t_name").innerHTML)+
                "&s_record=" + encodeURIComponent(s_record)+
                "&f_names=" + encodeURIComponent(document.getElementById("f_names").innerHTML)+
                "&f_sprs=" + encodeURIComponent(document.getElementById("f_sprs").innerHTML)+
                "&f_groups=" + encodeURIComponent(document.getElementById("f_groups").innerHTML)+
                "&f_types=" + encodeURIComponent(document.getElementById("f_types").innerHTML)+
                "&f_pkey=" + encodeURIComponent(document.getElementById("t_pk_fn").innerHTML)
        );
    }
    function check_insert_row(reply)
    {
        if (reply.substr(0,1) == '+') // Строка сохранена в базе данных
        {
            // r.innerHTML = '';
        }
        document.getElementById("hint").innerHTML=reply;
    }


    //
    // Удалить строку
    //
    function sql_delete_row(t) {
        var r = t.parentNode.parentNode; // текущая строка

        // Кол-во полей таблицы, следующее поле - кнопки, следующие поля - старые значения ключевых полей
        r_length = +document.getElementById("f_names").innerHTML.split(',').length;
        pk_length = document.getElementById("t_pk_f").innerHTML.split(',').length;

        s_record = "";
        for (var ii = 0; ii < r_length+1+pk_length; ii++){

            if (ii != r_length) // Пропускаю поле с кнопками
                s_record = s_record + r.cells[ii].innerHTML + '|';
        }

        doQuery ("/docs/delete_row", check_delete_row,
                "&t_name=" + encodeURIComponent(document.getElementById("t_name").innerHTML)+
                "&s_record=" + encodeURIComponent(s_record)+
                "&f_names=" + encodeURIComponent(document.getElementById("f_names").innerHTML)+
                "&f_sprs=" + encodeURIComponent(document.getElementById("f_sprs").innerHTML)+
                "&f_groups=" + encodeURIComponent(document.getElementById("f_groups").innerHTML)+
                "&f_types=" + encodeURIComponent(document.getElementById("f_types").innerHTML)+
                "&f_pkey=" + encodeURIComponent(document.getElementById("t_pk_fn").innerHTML)
        );
    }
    function check_delete_row(reply)
    {
        if (reply.substr(0,1) == '+') // Строка успешно удалена из базы данных
        {
            r.innerHTML = '';
        }
        document.getElementById("hint").innerHTML=reply;
    }

//=====================================================================

    var gcell; // текущая редактируемая ячейка таблицы
    var si;    // текущий список для выбора
    var sprs = [];

    function xcell_edit(f) {
        gcell = f;                          // Запоминаем изменяемую текущую ячейку
        var v = gcell.innerHTML;
        var col_no = gcell.cellIndex;
//        alert( gcell.cellIndex + ' : ' + gcell.parentNode.rowIndex );


//        if (a_names[j].slice(-5) == '_namexxx') {
//            gcell.innerHTML = '<input '+a_inp_types[col_no]+' class="cell2" id="edit2"  value="'+v+'" />';
//            var ed = document.getElementById("edit2");
//        }
//        else {
            gcell.innerHTML = '<input '+a_inp_types[col_no]+' class="cell2" id="edit2"  value="'+v+'" />';
            var ed = document.getElementById("edit2");
//        }
//        alert(f.innerHTML);
        ed.focus();

        ed.onblur = function() {
            gcell.innerHTML = ed.value;
        };

        // gcell.focus();


    }

    function cell_edit(f)
    {
//        alert(f.innerHTML);
//        if (gcell != null)
//            gcell.contentEditable = false;
        gcell = f;                          // Запоминаем изменяемую текущую ячейку
///        gcell.contentEditable = true;

///        gcell.focus();
  //      select_tc_text(gcell);             // Выделяем текст в ячейке
//        save_row_btn.disabled = false; // Активируем кнопку сохранения строки

        // При потере фокуса снимаем выделение
 //       gcell.onblur = function () {
 //           window.getSelection().removeAllRanges();
///            gcell.contentEditable = false;
 //       };
    }

    // При получении фокуса на ячейку которую редактируем вручную
    function num_focus(t)
    {
        var col_no = t.cellIndex;
        var v = t.innerHTML;

        var y = t.parentNode.rowIndex;
        var x = t.cellIndex;
        var rows = tbl.rows.length;
        var row = tbl.rows[t.parentNode.rowIndex];
        var cells = row.cells.length;

//        alert( gcell.cellIndex + ' : ' + gcell.parentNode.rowIndex );

      erro('x-'+tbl.rows[t.parentNode.rowIndex].cells[cells-1].innerHTML);
//        tbl.rows[0].cells.length;
//        erro(math.min(3,cells.length-1));
//        t.contentEditable = true;
        gcell = t;

//        select_tc_text(t);             // Выделяем текст в ячейке
//        save_row_btn.disabled = false; // Активируем кнопку сохранения строки

        // При потере фокуса снимаем выделение
        t.onblur = function () { window.getSelection().removeAllRanges(); };

        if (a_types[col_no].slice(-5) == 'TEXT') {
            //t.style.position = "relative";
            t.innerHTML = '<textarea wrap="soft" class="grid" id="edit2">'+v+'</textarea>';
        }
        else if (a_names[col_no].slice(-5) == '_name') {
            // показать список для выбора
            t.innerHTML = '<input '+a_inp_types[col_no]+' class="cell2" id="edit2"  value="'+v+'" />';
        }
        else {
            t.innerHTML = '<input '+a_inp_types[col_no]+' class="cell2" id="edit2"  value="'+v+'" />';
        }

        var ed = document.getElementById("edit2");
        ed.focus();
        ed.select();
        ed.onblur = function() { t.innerHTML = ed.value; };


        ed.onkeyup = onk;
        function onk(f) {
            switch(f.keyCode) {
                case 13:
                    erro('Enter');
                    break;
                case 16:
                    erro('Shift');
                    break;
                case 38:  // Стрелка вверх
                    if (y > 1)  tbl.rows[y-1].cells[x].focus();
                    else        erro('Это первая строка');
                    break;
                case 40:  // Стрелка вниз
                    if (y < rows-1)  tbl.rows[y+1].cells[x].focus();
                    else           erro(y + '- это последняя строка');
                    break;
                case 39:  // Стрелка вправо не обрабатывается и правильно
                    if (x < cells-1)  tbl.rows[y-1].cells[x].focus();
                    else        erro(x + '- это последняя ячейка в строке');
                    break;
                case 45:  // Стрелка вниз
                    erro('Ins');
                    // Создаем строку таблицы и вставляем ее перед текущей
                    ed.blur();
                    var row = tbl.insertRow(y);
                    erro('Inse');
                    row.innerHTML = tbl.rows[y+1].innerHTML;
                    erro('Inser');
                    row.cells[1].innerHTML = y;

                    tbl.rows[y].cells[x].focus();
//                    var row = document.createElement("TR");
//                    tbl.appendChild(row);
//                    row.innerHTML = tbl.rows[rows-1].innerHTML;
//                    alert(tbl.rows[rows-1].innerHTML);

//                    row = tbl.rows[rows].cloneNode('yes');

//                    var tr = document.createElement("TR");
//                    row.appendChild(tr);
//                    tr.innerHTML = 'новая строка';

           //         tbl.rows.push(tbl.rows[rows].cloneNode('yes'));
                    erro('Insert');
                    break;

                default:
                    erro(f.keyCode);
            }
        }



    }
    // Создаем строку таблицы и добавляем ее
    function insert_row(t) {
        var y = t.parentNode.parentNode.rowIndex;
        var x = t.parentNode.cellIndex;

        erro('Ins');
        // Создаем строку таблицы и вставляем ее перед текущей
        var row = tbl.insertRow(y);
        erro('Inse');
        row.innerHTML = tbl.rows[y+1].innerHTML;
        erro('Inser');
        row.cells[1].innerHTML = y;

        tbl.rows[y].cells[x].focus();
    }
    // Создаем строку таблицы и добавляем ее
    function append_row(t) {
        var row = document.createElement("TR");
        row.innerHTML = tbl.rows[tbl.rows.length-1].innerHTML;

        row.cells[0].innerHTML = '';
        row.cells[1].innerHTML = '';

        tbl.appendChild(row);
    }

    function delete_row(t) {
        var y = t.parentNode.parentNode.rowIndex;
        tbl.deleteRow(y);
    }


        //
    function get_spr_n(n, spr_name) {
//        doQuery ("/common/get_spr_names/"+spr_name, set_spr);

        doQuery ("/docs/get_spr_n", set_spr_n,
                "&n=" + encodeURIComponent(n) +
                "&spr_name=" + encodeURIComponent(spr_name)
        );

//        document.getElementById("si"+n).innerHTML = ' <option value="'+n+'">'+spr_name+'</option>';
    }

    var set_spr_n = function (reply)
    {
        var n = reply.slice(0,3).trim();
//alert(n);
        sprs[n] = document.getElementById("si"+n);
        sprs[n].innerHTML = reply.slice(3);
//        sprs[n].style.visibility = 'hidden';
        // Скрыть список выбора при отмене и потере фокуса
        sprs[n].onabort = function () { this.style.visibility = 'hidden'; };
        sprs[n].onblur = function () { this.style.visibility = 'hidden'; };
 //       alert(sprs[n]);
//        document.getElementById("si"+n).value = 'x';
    };

    // Открыть список для выбора значения
    function select_val(n, t)
    {
//        alert(sprs[n]);
        si = sprs[n];
        si.style.visibility = 'visible';    // Делаем список видимым
        si.focus();                         // Переходим в список

        gcell = t;                          // Запоминаем изменяемую текущую ячейку
        si.value = gcell.innerHTML;         // Перемещаемся в списке к значению изменяемой ячейки

        c = getCoords(gcell);               // Находим координаты изменяемой ячейки
        si.style.top = c.top + 5 + 'px';    // Накладываем список на ячейку
        si.style.left = c.left + 5 + 'px';

        si.width = t.width;
    }


    function get_datalist_n(n, spr_name) {
//        doQuery ("/common/get_spr_names/"+spr_name, set_spr);

        doQuery ("/docs/get_datalist_n", set_datalist_n,
                "&n=" + encodeURIComponent(n) +
                "&spr_name=" + encodeURIComponent(spr_name)
        );

//        document.getElementById("si"+n).innerHTML = ' <option value="'+n+'">'+spr_name+'</option>';
    }

    var set_datalist_n = function (reply)
    {
        var dls = document.getElementById("dls");
        dls.innerHTML += reply;
 //       alert(dls.innerHTML);
    };


    //=====================================================================

    // Показать таблицу
    var set_table = function (reply)
    {
        document.getElementById("table").innerHTML = reply;  // Сама таблица


        // Списки для выбора
        sprs = document.getElementById("f_spr_names").innerHTML.split(',');

        dls.innerHTML = '';
        for (var ii = 0; ii < sprs.length; ii++){

            if (sprs[ii] != '') {
                get_datalist_n(ii, sprs[ii]);
                get_spr_n(ii, sprs[ii]);

            }
        }

//        var el = document.getElementById("tbl");

//        el.style.tableLayout = "fixed";
//        el.style.borderColor = red;
//        alert("sss");
//        var el = document.getElementById("tbl").style.tableLayout = fixed;

//        table-layout: auto | fixed table-layout: auto | fixed

        a_names = document.getElementById("f_names").innerHTML.split(',');
        a_types = document.getElementById("f_types").innerHTML.split(',');
        a_sprs = document.getElementById("f_sprs").innerHTML.split(',');
        a_prec = document.getElementById("f_prec").innerHTML.split(',');


        // Определяют тип элемента для редактирования ячейки
//    <input type="button|checkbox|file|hidden|image|password|radio|reset|submit|text">
 //       alert(a_types.length);
        for (var i = 0; i < a_types.length; i++){
//            alert(a_types[i]+a_names[i]+i+a_names[i].slice(-5));
            if (a_types[i] == 'INTEGER')  a_inp_types[i] = ' type="number" ';
            else if (a_types[i] == 'NUMERIC')  a_inp_types[i] = ' type="number" step="0.001" ';
            else if (a_types[i] == 'VARCHAR')  {
                 if (a_names[i].slice(-5) == '_name')
                      a_inp_types[i] = ' list="lst'+i+'" ';
                 else
                      a_inp_types[i] = ' type="text" ';
            }
            else if (a_types[i] == 'TEXT')  a_inp_types[i] = ' type="text" ';
            else  a_inp_types[i] = ' ztype="text" ';
        }

        tbl =  document.getElementById("tbl");

        //Для отладки
        var s = '';
        for (var i = 0; i < a_types.length; i++){
            s = s + a_inp_types[i] + '<br>';
        }
       //alert(s);


    };
    function get_table(t_rf, t_name, t_label)
    {
        document.getElementById("t_name").innerHTML = t_name;
        doQuery ("/docs/get_table", set_table,
                "&t_rf=" + encodeURIComponent(t_rf) +
                "&t_name=" + encodeURIComponent(t_name) +
                "&t_label=" + encodeURIComponent(t_label)
        );
    }

    // Показать поля таблицы
    var set_table_fields = function (reply)
    {
        document.getElementById("table_fields").innerHTML = reply;
    };
    function get_table_fields(t_rf)
    {
        doQuery ("/docs/get_table_fields", set_table_fields, "&t_rf=" + encodeURIComponent(t_rf));
    }

    // Показать список таблиц
    var set_tables = function (reply)
    {
        document.getElementById("tables").innerHTML = reply;
    };
    function get_tables()
    {
        doQuery ("/docs/get_tables", set_tables);
    }

    get_tables();   // Показать список таблиц

</script>