
<div style='overflow: auto;'>

  <div style='float: left; overflow: auto;'>
    <h1>{{header}}</h1>
  </div>

  <div style='float: right; overflow: auto;'>
    <button id="btnOnOff" type="button" style="float: right" onclick="auto_on()">Включить часы</button>
    <br><br>
    <div id="datetime" style="float: right; color: green; font-weight: bold; font-size: larger" ></div>
  </div>

</div>


<!--
<table class="form">
    <tr>
        <td><label>Дата:</label></td>
        <td><input id="dt" type="date" pattern='[0-9]{4}-[0-9]{2}-[0-9]{2}' name="dt" value="" ></td>
        <td><button type="button" onclick="set_now()">Сегодня</button></td>
        <td><button type="button" onclick="get_formovka()">Формовка</button></td>
    </tr>
</table>
-->

<table>

    <tr class="reports"><td align="left">
        <p>
            Пока картинка меняется раз в несколько секунд или минут. В дальнейшем это будет переделано и картинка будет меняться
            по сигналу с сервера в момент когда там будут меняться данные.
        </p>

        План-месяц: <select size="1" name='plan_name' id='plan_name' title="" value="x" onchange="plan_change()"></select>

    </td></tr><tr class="reports"><td>

    <div style='overflow: auto;'>
        <h2>Итоги</h2>
        <a href="/reports/svod" > Образец итоговой таблицы </a>
    </div>

    <div style='overflow: auto;'>
       <h2>Формовка</h2>
       <button id="btnFormovkaOnOff" type="button"  onclick="formovka_auto_on()">Включить автообновление</button>
    </div>
      <br>
    <div id="formovka" align="left" style='float: left; overflow: auto;'></div>
    </td>
<!--    <tr><td><canvas id="myChart" height="30px" visible="false"></canvas></td></tr>-->
</tr>


    <tr class="reports"><td>

    <div style='overflow: auto;'>
        <h2>План-Факт ЖБИ</h2>
        <button id="btnPlanFactFcOnOff" type="button" onclick="plan_fact_fc_auto_on()">Включить автообновление</button>
        <button id="btnDayPlan" type="button" disabled onclick="day_or_plan()"><b>День</b>/План  </button>
    </div>
    <br>
    <div id="plan_fact_fc" align="left" style='float: left; overflow: auto;'></div>
    </td>
<!--    <tr><td><canvas id="myChart2" height="30px" visible="false"></canvas></td></tr>-->

    </tr>

    <tr class="reports"><td>

        <div style='overflow: auto;'>
            <h2>ЭФФЕКТИВНОСТЬ</h2>
            <button id="btnEffOnOff" type="button" onclick="eff_auto_on()">Включить автообновление</button>
        </div>
        <br>
        <div id="eff" align="left" style='float: left; overflow: auto;'></div>
    </td>
        <!--    <tr><td><canvas id="myChart2" height="30px" visible="false"></canvas></td></tr>-->

    </tr>



    <tr class="reports"><td>
    <div style='overflow: auto;'>
        <h2>СГП</h2>
        <button id="btnSkladFcOnOff" type="button"  onclick="sklad_fc_auto_on()">Включить автообновление</button>
    </div>
    <br>
    <div id="sklad_fc" align="left" style='float: left; overflow: auto;'></div>

    </td></tr><tr class="reports"><td>

    <div style='overflow: auto;'>
        <h2>Склад металла</h2>
        <button id="btnSkladArmOnOff" type="button"  onclick="sklad_arm_auto_on()">Включить автообновление</button>
    </div>
    <br>
    <div id="sklad_arm" align="left" style='float: left; overflow: auto;'></div>


    </td></tr><tr class="reports"><td>

    <div style='overflow: auto;'>
        <h2>На сколько дней хватит металла</h2>
        <button id="btnArmOstDaily" type="button"  onclick="arm_ost_daily_on()">Посмотреть</button>
    </div>
    <br>
    <div id="arm_ost_daily" align="left" style='float: left; overflow: auto;'></div>

    </td></tr><tr class="reports"><td>

    <div style='overflow: auto;'>
        <h2>На сколько дней хватит инертных материалов</h2>
        <button id="btnBetOstDaily" type="button"  onclick="bet_ost_daily_on()">Посмотреть</button>
    </div>
    <br>
    <div id="bet_ost_daily" align="left" style='float: left; overflow: auto;'></div>

</td></tr>
</table>

<div id="hint" ></div>
<div id="erro" ></div>

<!--
<table class="report" align="left" align="left">
    <tr><td class="report">ЖБИ</td>
        <td class="report left">Вчера</td>
        <td class="report left">Сегодня</td>
        <td class="report left">Завтра</td>
    </tr>
</table><br>
-->


<button id="btn_tst" type="button" onclick="tst()">ТЕСТ</button>
<div id="tst"></div>



<script>
    var timerId = 0;
    var timerFormovkaId = 0;
    var timerPlanFactFcId = 0;
    var timerEffId = 0;
    var timerSkladFcId = 0;
    var timerSkladArmId = 0;
    var dtNow = new Date();;
    var dtNowAsString= toYYYYMMDDHHMMSS(dtNow);
    var dtbAsString= toYYYYMMDDHHMMSS(new Date(2019, 0, 1));
    var dteAsString= toYYYYMMDDHHMMSS(new Date(2019, 0, 31));
    var PlanName = toYYYYMM(new Date());
    var DayPlan = 'Day';

    function auto_on()
    {
        if (timerId <= 0) {
            timerId = setInterval(show_info, 1000);
            document.getElementById("btnOnOff").innerHTML = 'Выключить часы';
        }
        else if (timerId > 0) {
            clearInterval(timerId);
            timerId = 0;

            document.getElementById("btnOnOff").innerHTML = 'Включить часы';
            document.getElementById("datetime").innerHTML = '' ;
        }
    }
    // Перерисовка данных на странице (или можно для каждого блока задать свой интервал)
    function show_info()
    {
        dtNow = new Date();
        document.getElementById("datetime").innerHTML = dtNowAsString = toYYYYMMDDHHMMSS(dtNow);
    }

    function clear_chart (canvas_id) {
        var canvas = document.getElementById(canvas_id);
        var ctx1 = canvas.getContext('2d');
        ctx1.clearRect(0, 0, canvas.width, canvas.height);
        canvas.style.height = "5px";
    };


    // ФОРМОВКА
    function formovka_auto_on()
    {
        if (timerFormovkaId <= 0) {
            get_formovka_plan();
            timerFormovkaId = setInterval(get_formovka_plan, 60000);
            document.getElementById("btnFormovkaOnOff").innerHTML = 'Выключить автообновление';
        }
        else if (timerFormovkaId > 0) {
            clearInterval(timerFormovkaId);
            timerFormovkaId = 0;
            document.getElementById("btnFormovkaOnOff").innerHTML = 'Включить автообновление';
            document.getElementById("formovka").innerHTML = '';
 //           clear_chart ('myChart');
        }
    }
/*
    // Запросить и показать формовку за дату
    var set_formovka = function (reply)
    {
        document.getElementById("formovka").innerHTML = reply;
    };
    function get_formovka()
    {
//        document.getElementById("formovka").innerHTML = '';

        doQuery ("/reports/get_formovka", set_formovka,
                '&dt=' + encodeURIComponent(dtNowAsString.substr(0, 10))
//        '&dt=' + encodeURIComponent(document.getElementById("dt").value.substr(0, 10))
        );
    }
*/

    // Запросить и показать формовку за период
    var set_formovka_plan = function (reply)
    {
        document.getElementById("formovka").innerHTML = reply;

        doQuery ("/reports/rep_formovka_fcv_daily", set_formovka_fcv_daily,
                '&dtb=' + encodeURIComponent(PlanFirstDateAsSting(PlanName))+
                '&dte=' + encodeURIComponent(PlanLastDateAsSting(PlanName))
        );

    };
    function get_formovka_plan()
    {
//        document.getElementById("formovka").innerHTML = '';

        if (PlanName === '') {
            document.getElementById("formovka").innerHTML = '';
           }
        else
          doQuery ("/reports/get_formovka_plan", set_formovka_plan,
                '&dtb=' + encodeURIComponent(PlanFirstDateAsSting(PlanName))+
                '&dte=' + encodeURIComponent(PlanLastDateAsSting(PlanName))
//        '&dt=' + encodeURIComponent(document.getElementById("dt").value.substr(0, 10))
        );
    }

// Построение диаграммы: объемы формовки по дням
    var  set_formovka_fcv_daily = function (reply)
    {
        var canvas = document.getElementById('myChart');
        var ctx = canvas.getContext('2d');

        var x = reply.slice(1, -1).split(',');

        var chart = new Chart(ctx, {
            // The type of chart we want to create
            type: 'line',

                    // The data for our dataset
                    data: {
//                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
            labels: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],
                    datasets: [{
                label: 'Объем заформованных ЖБИ по дням в метрах кубических',
//                    backgroundColor: 'rgb(255, 99, 132)',
                borderColor: 'rgb(255, 99, 132)',
                data: x,
            }]
        },

            // Configuration options go here
            options: {}
        });

        // Показываю после очистки и уменьшения размера
        canvas.style.height = "auto";
        canvas.style.width = "100%";
    };




    // План-факт ЖБИ
    function plan_fact_fc_auto_on()
    {
        if (timerPlanFactFcId <= 0) {
            get_plan_fact_fc();
            timerPlanFactFcId = setInterval(get_plan_fact_fc, 60000);
            document.getElementById("btnPlanFactFcOnOff").innerHTML = 'Выключить автообновление';
            document.getElementById("btnDayPlan").disabled = false;
        }
        else if (timerPlanFactFcId > 0) {
            clearInterval(timerPlanFactFcId);
            timerPlanFactFcId = 0;
            document.getElementById("btnPlanFactFcOnOff").innerHTML = 'Включить автообновление';
            document.getElementById("btnDayPlan").disabled = true;
            document.getElementById("plan_fact_fc").innerHTML = '';
//            clear_chart ('myChart2');
        }
    }
    var set_plan_fact_fc = function (reply)
    {
        document.getElementById("plan_fact_fc").innerHTML = reply;

        doQuery ("/reports/get_plan_fact_fcv", set_plan_fact_fcv,
                '&plan=' + encodeURIComponent(PlanName)+
                '&day_plan=' + encodeURIComponent(DayPlan)
        );
    };
    function get_plan_fact_fc()
    {
        doQuery ("/reports/get_plan_fact_fc", set_plan_fact_fc,
                '&plan=' + encodeURIComponent(PlanName)+
                '&day_plan=' + encodeURIComponent(DayPlan)
        );
    }
    // Переключение вида показа День или План
    function day_or_plan() {
        if (DayPlan === 'Plan') {
            DayPlan = 'Day';
            get_plan_fact_fc();
            document.getElementById("btnDayPlan").innerHTML = '<b>День</b>/План';
        }
        else {
            DayPlan = 'Plan';
            get_plan_fact_fc();
            document.getElementById("btnDayPlan").innerHTML = 'День/<b>План</b>';
        }
    }
    // Построение диаграммы: объемы формовки по дням
    var  set_plan_fact_fcv = function (reply)
    {
//        alert(reply);

        let canvas = document.getElementById('myChart2');
        let ctx = canvas.getContext('2d');

        let x = reply.split(';');
        let fact = x[0].split(',');
        let plan = x[1].split(',');

        let chart = new Chart(ctx, {
            // The type of chart we want to create
            type: 'line',

            // The data for our dataset
            data: {
                //                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
                labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31],
                datasets: [
                    {
                        label: 'Объем ФАКТ',
                        borderColor: 'blue',
                        data: fact,
                    },
                    {
                        label: 'Объем ПЛАН',
                        borderColor: '#262626',
                        data: plan,
                    }
                ]
            },

            // Configuration options go here
            options: {}
        });

        // Показываю после очистки и уменьшения размера
        canvas.style.height = "auto";
        canvas.style.width = "100%";


    };

//========
    // ЭФФЕКТИВНОСТЬ
    function eff_auto_on()
    {
        if (timerEffId <= 0) {
            get_eff();
            timerEffId = setInterval(get_eff, 60000);
            document.getElementById("btnEffOnOff").innerHTML = 'Выключить автообновление';
        }
        else if (timerEffId > 0) {
            clearInterval(timerEffId);
            timerEffId = 0;
            document.getElementById("btnEffOnOff").innerHTML = 'Включить автообновление';
            document.getElementById("eff").innerHTML = '';
        }
    }
    var set_eff = function (reply)
    {
        document.getElementById("eff").innerHTML = reply;

        doQuery ("/reports/get_eff_data", set_eff_chart,
                '&dtb=' + encodeURIComponent(PlanFirstDateAsSting(PlanName))+
                '&dte=' + encodeURIComponent(PlanLastDateAsSting(PlanName))
        );
    };
    function get_eff()
    {
        doQuery ("/reports/get_eff", set_eff,
                '&dtb=' + encodeURIComponent(PlanFirstDateAsSting(PlanName))+
                '&dte=' + encodeURIComponent(PlanLastDateAsSting(PlanName))
        );
    }

    // Построение диаграммы: объемы формовки по дням
    var  set_eff_chart = function (reply)
    {
        let x = reply.split(';');

        for (let i=1; i < x.length; i++) {
            let z = x[i].split('!');

            let canvas = document.getElementById('myChartEff'+(i));
            let ctx = canvas.getContext('2d');

            let chart = new Chart(ctx, {
                // The type of chart we want to create
                type: 'line',

                // The data for our dataset
                data: {
                    //                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
                    labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31],
                    datasets: [
                        {
                            label: z[0],
                            borderColor: '#00a650',
                            data: z[1].split(':'),
                        }
                    ]
                },

                // Configuration options go here
                options: {}
            });

        }




/*
        let canvas = document.getElementById('myChartEff');
        let ctx = canvas.getContext('2d');
        let chart = new Chart(ctx, {
            // The type of chart we want to create
            type: 'line',

            // The data for our dataset
            data: {
                //                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
                labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31],
                datasets: [
                    {
                        label: 'Объем ФАКТ',
                        borderColor: 'blue',
                        data: fact,
                    },
                    {
                        label: 'Объем ПЛАН',
                        borderColor: '#262626',
                        data: plan,
                    }
                ]
            },

            // Configuration options go here
            options: {}
        });

        // Показываю после очистки и уменьшения размера
        canvas.style.height = "auto";
        canvas.style.width = "100%";

*/
    };






    // СГП (склад ЖБИ)
    function sklad_fc_auto_on()
    {
        if (timerSkladFcId <= 0) {
            get_sklad_fc();
            timerSkladFcId = setInterval(get_sklad_fc, 60000);
            document.getElementById("btnSkladFcOnOff").innerHTML = 'Выключить автообновление';
        }
        else if (timerSkladFcId > 0) {
            clearInterval(timerSkladFcId);
            timerSkladFcId = 0;
            document.getElementById("btnSkladFcOnOff").innerHTML = 'Включить автообновление';
            document.getElementById("sklad_fc").innerHTML = '';
        }
    }
    var set_sklad_fc = function (reply)
    {
        document.getElementById("sklad_fc").innerHTML = reply;
    }
    function get_sklad_fc()
    {
//        document.getElementById("formovka").innerHTML = '';

          doQuery ("/reports/get_sklad_fc", set_sklad_fc,
                    '&dtb=' + encodeURIComponent(PlanFirstDateAsSting(PlanName))+
                    '&dte=' + encodeURIComponent(PlanLastDateAsSting(PlanName))
            );
    }


    // Склад МЕТАЛЛА
    function sklad_arm_auto_on()
    {
        if (timerSkladArmId <= 0) {
            get_sklad_arm();
            timerSkladArmId = setInterval(get_sklad_arm, 60000);
            document.getElementById("btnSkladArmOnOff").innerHTML = 'Выключить автообновление';
        }
        else if (timerSkladArmId > 0) {
            clearInterval(timerSkladArmId);
            timerSkladArmId = 0;
            document.getElementById("btnSkladArmOnOff").innerHTML = 'Включить автообновление';
            document.getElementById("sklad_arm").innerHTML = '';
        }
    }
    var set_sklad_arm = function (reply)
    {
        document.getElementById("sklad_arm").innerHTML = reply;
    }
    function get_sklad_arm()
    {
//        document.getElementById("formovka").innerHTML = '';

        doQuery ("/reports/get_sklad_arm", set_sklad_arm,
                '&dtb=' + encodeURIComponent(PlanFirstDateAsSting(PlanName))+
                '&dte=' + encodeURIComponent(PlanLastDateAsSting(PlanName))
        );
    }

    //
    // Остатки металла по дням начиная от сегодня (на сколько дней хватит металла)
    //
    function arm_ost_daily_on()
    {
        if (document.getElementById("arm_ost_daily").innerHTML == '') {
            get_arm_ost_daily();
            document.getElementById("btnArmOstDaily").innerHTML = 'Очистить';
        }
        else {
            document.getElementById("arm_ost_daily").innerHTML = '';
            document.getElementById("btnArmOstDaily").innerHTML = 'Посмотреть';
        }
    }
    var set_arm_ost_daily = function (reply)
    {
        document.getElementById("arm_ost_daily").innerHTML = reply;
    }
    function get_arm_ost_daily()
    {
//        document.getElementById("formovka").innerHTML = '';

        doQuery ("/reports/get_mat_ost_daily", set_arm_ost_daily
                ,'&mat=АРМАТУРА'
        );
    }
    //
    // Остатки ИНЕРТНЫХ МАТЕРИАЛОВ по дням начиная от сегодня (на сколько дней хватит)
    //
    function bet_ost_daily_on()
    {
        if (document.getElementById("bet_ost_daily").innerHTML == '') {
            get_bet_ost_daily();
            document.getElementById("btnBetOstDaily").innerHTML = 'Очистить';
        }
        else {
            document.getElementById("bet_ost_daily").innerHTML = '';
            document.getElementById("btnBetOstDaily").innerHTML = 'Посмотреть';
        }
    }
    var set_bet_ost_daily = function (reply)
    {
        document.getElementById("bet_ost_daily").innerHTML = reply;
    }
    function get_bet_ost_daily()
    {
//        document.getElementById("formovka").innerHTML = '';

        doQuery ("/reports/get_mat_ost_daily", set_bet_ost_daily
                ,'&mat=МАТЕРИАЛЫ'
        );
//        doQuery ("/reports/get_bet_ost_daily", set_bet_ost_daily,
//                '&dtb=' + encodeURIComponent(PlanName)
//        );
    }

    
    
    

    // Изготовить список Планов для выбора
    var set_plan_names = function (reply)
    {
        document.getElementById("plan_name").innerHTML = reply;
        document.getElementById("plan_name").value = PlanName;
    }

    function get_plan_names()
    {
        doQuery ("/common/get_spr_names/Планы", set_plan_names);
    }

    function plan_change()
    {
        PlanName = document.getElementById("plan_name").value;
        document.getElementById("tst").innerHTML = PlanName;

        if (timerFormovkaId > 0) get_formovka_plan();



    }


    // ======================= ТЕСТЫ =========================
    function tst()
    {
      tst_result = PlanName;

//      tst_result = PlanFirstDateAsSting(PlanName) + '<br>' + PlanLastDateAsSting(PlanName);
 //       tst_result =  document.getElementById("plan_name").value;


//      dt1 = new Date(2019, 1, 1);
//      dt2 = new Date(2019, 1, 11);

//      document.getElementById("tst").innerHTML = mon_days(dt1, dt2);
      document.getElementById("tst").innerHTML = tst_result;
//        document.getElementById("tst").innerHTML = mon2_days('2019-01-01', '2019-01-11');

    }

    // Сформировать список чисел месяца от даты до даты
    function mon2_days(dtb, dte)
    {
        day_ms = 1000*3600*24;

        y1 = dtb.substr(0, 4);
        m1 = dtb.substr(5, 2) - 1;
        d1 = dtb.substr(8, 2);

        y2 = dte.substr(0, 4);
        m2 = dte.substr(5, 2) - 1;
        d2 = dte.substr(8, 2);

        dt1 = new Date(y1, m1, d1);
        dt2 = new Date(y2, m2, d2);

        result = 'z';
        result = result + y1 + m1+ d1;
        result = result + '<br>'+ dt1 + "," + dt2;

//        var ms = new Date().getTime() + 86400000;
//        var tomorrow = new Date(ms);

        dt1.setTime( dt1.getTime() + day_ms);
        result = result + '<br>'+ dt1 + "," + dt2;
        dt1.setTime( dt1.getTime() + day_ms);
        result = result + '<br>'+ dt1 + "," + dt2;

        return result;
    }

    function mon_days(dtb, dte)
    {
        result = 'z';
//        result = result + "<br>" + dtb + "<br>" + dte;
        day_ms = 1000*3600*24;

       for (var t=dtb; t <= dte; t.setTime( t.getTime() + day_ms))
        {
            result = result + ("0"+t.getDate()).slice(-2) + ',';
//            result = result + "<br>" + t;

        }

        return result;
    }

    get_plan_names();
</script>